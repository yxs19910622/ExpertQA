<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd " id="WebApp_ID" version="2.5" >
  <display-name>ExpertQA</display-name>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:config/spring/applicationContext.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
<!--   <listener>
  <listener-class>org.izhong.expert.util.TimerListner</listener-class>
</listener> -->

  <welcome-file-list>
    <!-- <welcome-file>index.jsp</welcome-file> -->
    	<welcome-file>index.html</welcome-file>
  </welcome-file-list>
<!--   <filter>
    <filter-name>UserLoginValidate</filter-name>
    <filter-class>org.izhong.expert.util.UserLoginValidate</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>UserLoginValidate</filter-name>
    <url-pattern>/answerQuestion?*</url-pattern>
  </filter-mapping> -->
  <!--  sso拦截器   -->
  <filter>
    <filter-name>SsoFilter</filter-name>
    <filter-class>org.izhong.web.util.SsoFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>SsoFilter</filter-name>
    <url-pattern>/sso/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>UrlRewriteFilter</filter-name>
    <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
    <init-param>
      <param-name>logLevel</param-name>
      <param-value>WARN</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>UrlRewriteFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>*.action</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
<!--   <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping> -->

  
  <servlet>
  	<servlet-name>dispatcher</servlet-name>
    <servlet-class>
    		org.springframework.web.servlet.DispatcherServlet
    </servlet-class>
    <load-on-startup>0</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/service/*</url-pattern>
    </servlet-mapping>
    <servlet>
		<servlet-name>dwr</servlet-name>
		<servlet-class>
			org.directwebremoting.servlet.DwrServlet
			<!-- com.fetionyy.web.servlet.RefererDwrServlet -->
		</servlet-class>
		<!--
		 <init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
			</init-param> 
		 init-param>   
			<param-name>scriptSessionTimeout</param-name>   
			<param-value>1000</param-value>   
			</init-param -->
		<init-param>
			<param-name>crossDomainSessionSecurity</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>activeReverseAjaxEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>pollAndCometEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>allowScriptTagRemoting</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>
				allowGetForSafariButMakeForgeryEasier
			</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>maxCallCount</param-name>
			<param-value>20</param-value>
		</init-param>

		<init-param>
			<param-name>maxWaitingThreads</param-name>
			<param-value>100</param-value>
		</init-param>
		<init-param>
			<param-name>preStreamWaitTime</param-name>
			<param-value>29000</param-value>
		</init-param>
		<init-param>
			<param-name>postStreamWaitTime</param-name>
			<param-value>1000</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>dwr</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>
	
	<error-page>
		<error-code>404</error-code>
		<location>/common/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/common/403.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/common/error.jsp</location>
	</error-page>
	
	<error-page>
		<exception-type>java.lang.RuntimeException</exception-type>
		<location>/common/error.jsp</location>
	</error-page>

	<listener>
		<listener-class>
			org.izhong.expert.util.SessionListener
		</listener-class>
	</listener>
	<login-config>  
    <!-- Authorization setting for SSL -->  
    <auth-method>CLIENT-CERT</auth-method>  
    <realm-name>Client Cert Users-only Area</realm-name>  
</login-config>  
<security-constraint>  
    <!-- Authorization setting for SSL -->  
    <web-resource-collection >  
        <web-resource-name >SSL</web-resource-name>  
        <url-pattern>/*</url-pattern>  
    </web-resource-collection>  
    <user-data-constraint>  
        <transport-guarantee>CONFIDENTIAL</transport-guarantee>  
    </user-data-constraint>  
</security-constraint> 
  <login-config>
      <!-- Authorization setting for SSL -->
      <auth-method>CLIENT-CERT</auth-method>
      <realm-name>Client Cert Users-only Area</realm-name>
  </login-config>
  <security-constraint>
      <!-- Authorization setting for SSL -->
      <web-resource-collection >
          <web-resource-name >SSL</web-resource-name>
          <url-pattern>/*</url-pattern>
      </web-resource-collection>
      <user-data-constraint>
          <transport-guarantee>CONFIDENTIAL</transport-guarantee>
      </user-data-constraint>
  </security-constraint>
</web-app>